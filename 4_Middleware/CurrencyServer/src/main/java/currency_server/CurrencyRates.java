// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: currency_rates.proto

package currency_server;

public final class CurrencyRates {
  private CurrencyRates() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code Currency}
   */
  public enum Currency
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0),
    /**
     * <code>PLN = 1;</code>
     */
    PLN(1),
    /**
     * <code>EUR = 2;</code>
     */
    EUR(2),
    /**
     * <code>CHF = 3;</code>
     */
    CHF(3),
    /**
     * <code>CAD = 4;</code>
     */
    CAD(4),
    /**
     * <code>USD = 5;</code>
     */
    USD(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <code>PLN = 1;</code>
     */
    public static final int PLN_VALUE = 1;
    /**
     * <code>EUR = 2;</code>
     */
    public static final int EUR_VALUE = 2;
    /**
     * <code>CHF = 3;</code>
     */
    public static final int CHF_VALUE = 3;
    /**
     * <code>CAD = 4;</code>
     */
    public static final int CAD_VALUE = 4;
    /**
     * <code>USD = 5;</code>
     */
    public static final int USD_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static Currency valueOf(int value) {
      return forNumber(value);
    }

    public static Currency forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return PLN;
        case 2: return EUR;
        case 3: return CHF;
        case 4: return CAD;
        case 5: return USD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Currency>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Currency> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Currency>() {
            public Currency findValueByNumber(int number) {
              return Currency.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return CurrencyRates.getDescriptor().getEnumTypes().get(0);
    }

    private static final Currency[] VALUES = values();

    public static Currency valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Currency(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Currency)
  }

  public interface ExchangeRateServiceRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ExchangeRateServiceRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.Currency baseCurrency = 1;</code>
     */
    int getBaseCurrencyValue();
    /**
     * <code>.Currency baseCurrency = 1;</code>
     */
    Currency getBaseCurrency();

    /**
     * <code>repeated .Currency foreignCurrency = 2;</code>
     */
    java.util.List<Currency> getForeignCurrencyList();
    /**
     * <code>repeated .Currency foreignCurrency = 2;</code>
     */
    int getForeignCurrencyCount();
    /**
     * <code>repeated .Currency foreignCurrency = 2;</code>
     */
    Currency getForeignCurrency(int index);
    /**
     * <code>repeated .Currency foreignCurrency = 2;</code>
     */
    java.util.List<Integer>
    getForeignCurrencyValueList();
    /**
     * <code>repeated .Currency foreignCurrency = 2;</code>
     */
    int getForeignCurrencyValue(int index);
  }
  /**
   * Protobuf type {@code ExchangeRateServiceRequest}
   */
  public  static final class ExchangeRateServiceRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ExchangeRateServiceRequest)
      ExchangeRateServiceRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ExchangeRateServiceRequest.newBuilder() to construct.
    private ExchangeRateServiceRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ExchangeRateServiceRequest() {
      baseCurrency_ = 0;
      foreignCurrency_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ExchangeRateServiceRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              baseCurrency_ = rawValue;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                foreignCurrency_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              foreignCurrency_.add(rawValue);
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                  foreignCurrency_ = new java.util.ArrayList<Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                foreignCurrency_.add(rawValue);
              }
              input.popLimit(oldLimit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          foreignCurrency_ = java.util.Collections.unmodifiableList(foreignCurrency_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CurrencyRates.internal_static_ExchangeRateServiceRequest_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CurrencyRates.internal_static_ExchangeRateServiceRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ExchangeRateServiceRequest.class, Builder.class);
    }

    private int bitField0_;
    public static final int BASECURRENCY_FIELD_NUMBER = 1;
    private int baseCurrency_;
    /**
     * <code>.Currency baseCurrency = 1;</code>
     */
    public int getBaseCurrencyValue() {
      return baseCurrency_;
    }
    /**
     * <code>.Currency baseCurrency = 1;</code>
     */
    public Currency getBaseCurrency() {
      @SuppressWarnings("deprecation")
      Currency result = Currency.valueOf(baseCurrency_);
      return result == null ? Currency.UNRECOGNIZED : result;
    }

    public static final int FOREIGNCURRENCY_FIELD_NUMBER = 2;
    private java.util.List<Integer> foreignCurrency_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        Integer, Currency> foreignCurrency_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                Integer, Currency>() {
              public Currency convert(Integer from) {
                @SuppressWarnings("deprecation")
                Currency result = Currency.valueOf(from);
                return result == null ? Currency.UNRECOGNIZED : result;
              }
            };
    /**
     * <code>repeated .Currency foreignCurrency = 2;</code>
     */
    public java.util.List<Currency> getForeignCurrencyList() {
      return new com.google.protobuf.Internal.ListAdapter<
          Integer, Currency>(foreignCurrency_, foreignCurrency_converter_);
    }
    /**
     * <code>repeated .Currency foreignCurrency = 2;</code>
     */
    public int getForeignCurrencyCount() {
      return foreignCurrency_.size();
    }
    /**
     * <code>repeated .Currency foreignCurrency = 2;</code>
     */
    public Currency getForeignCurrency(int index) {
      return foreignCurrency_converter_.convert(foreignCurrency_.get(index));
    }
    /**
     * <code>repeated .Currency foreignCurrency = 2;</code>
     */
    public java.util.List<Integer>
    getForeignCurrencyValueList() {
      return foreignCurrency_;
    }
    /**
     * <code>repeated .Currency foreignCurrency = 2;</code>
     */
    public int getForeignCurrencyValue(int index) {
      return foreignCurrency_.get(index);
    }
    private int foreignCurrencyMemoizedSerializedSize;

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (baseCurrency_ != Currency.UNKNOWN.getNumber()) {
        output.writeEnum(1, baseCurrency_);
      }
      if (getForeignCurrencyList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(foreignCurrencyMemoizedSerializedSize);
      }
      for (int i = 0; i < foreignCurrency_.size(); i++) {
        output.writeEnumNoTag(foreignCurrency_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (baseCurrency_ != Currency.UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, baseCurrency_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < foreignCurrency_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(foreignCurrency_.get(i));
        }
        size += dataSize;
        if (!getForeignCurrencyList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }foreignCurrencyMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ExchangeRateServiceRequest)) {
        return super.equals(obj);
      }
      ExchangeRateServiceRequest other = (ExchangeRateServiceRequest) obj;

      if (baseCurrency_ != other.baseCurrency_) return false;
      if (!foreignCurrency_.equals(other.foreignCurrency_)) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BASECURRENCY_FIELD_NUMBER;
      hash = (53 * hash) + baseCurrency_;
      if (getForeignCurrencyCount() > 0) {
        hash = (37 * hash) + FOREIGNCURRENCY_FIELD_NUMBER;
        hash = (53 * hash) + foreignCurrency_.hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ExchangeRateServiceRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ExchangeRateServiceRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ExchangeRateServiceRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ExchangeRateServiceRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ExchangeRateServiceRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ExchangeRateServiceRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ExchangeRateServiceRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ExchangeRateServiceRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ExchangeRateServiceRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ExchangeRateServiceRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ExchangeRateServiceRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ExchangeRateServiceRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ExchangeRateServiceRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ExchangeRateServiceRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ExchangeRateServiceRequest)
        ExchangeRateServiceRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CurrencyRates.internal_static_ExchangeRateServiceRequest_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CurrencyRates.internal_static_ExchangeRateServiceRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ExchangeRateServiceRequest.class, Builder.class);
      }

      // Construct using currency_server.CurrencyRates.ExchangeRateServiceRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        baseCurrency_ = 0;

        foreignCurrency_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CurrencyRates.internal_static_ExchangeRateServiceRequest_descriptor;
      }

      @Override
      public ExchangeRateServiceRequest getDefaultInstanceForType() {
        return ExchangeRateServiceRequest.getDefaultInstance();
      }

      @Override
      public ExchangeRateServiceRequest build() {
        ExchangeRateServiceRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public ExchangeRateServiceRequest buildPartial() {
        ExchangeRateServiceRequest result = new ExchangeRateServiceRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.baseCurrency_ = baseCurrency_;
        if (((bitField0_ & 0x00000002) != 0)) {
          foreignCurrency_ = java.util.Collections.unmodifiableList(foreignCurrency_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.foreignCurrency_ = foreignCurrency_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ExchangeRateServiceRequest) {
          return mergeFrom((ExchangeRateServiceRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ExchangeRateServiceRequest other) {
        if (other == ExchangeRateServiceRequest.getDefaultInstance()) return this;
        if (other.baseCurrency_ != 0) {
          setBaseCurrencyValue(other.getBaseCurrencyValue());
        }
        if (!other.foreignCurrency_.isEmpty()) {
          if (foreignCurrency_.isEmpty()) {
            foreignCurrency_ = other.foreignCurrency_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureForeignCurrencyIsMutable();
            foreignCurrency_.addAll(other.foreignCurrency_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ExchangeRateServiceRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ExchangeRateServiceRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int baseCurrency_ = 0;
      /**
       * <code>.Currency baseCurrency = 1;</code>
       */
      public int getBaseCurrencyValue() {
        return baseCurrency_;
      }
      /**
       * <code>.Currency baseCurrency = 1;</code>
       */
      public Builder setBaseCurrencyValue(int value) {
        baseCurrency_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.Currency baseCurrency = 1;</code>
       */
      public Currency getBaseCurrency() {
        @SuppressWarnings("deprecation")
        Currency result = Currency.valueOf(baseCurrency_);
        return result == null ? Currency.UNRECOGNIZED : result;
      }
      /**
       * <code>.Currency baseCurrency = 1;</code>
       */
      public Builder setBaseCurrency(Currency value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        baseCurrency_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.Currency baseCurrency = 1;</code>
       */
      public Builder clearBaseCurrency() {
        
        baseCurrency_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<Integer> foreignCurrency_ =
        java.util.Collections.emptyList();
      private void ensureForeignCurrencyIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          foreignCurrency_ = new java.util.ArrayList<Integer>(foreignCurrency_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <code>repeated .Currency foreignCurrency = 2;</code>
       */
      public java.util.List<Currency> getForeignCurrencyList() {
        return new com.google.protobuf.Internal.ListAdapter<
            Integer, Currency>(foreignCurrency_, foreignCurrency_converter_);
      }
      /**
       * <code>repeated .Currency foreignCurrency = 2;</code>
       */
      public int getForeignCurrencyCount() {
        return foreignCurrency_.size();
      }
      /**
       * <code>repeated .Currency foreignCurrency = 2;</code>
       */
      public Currency getForeignCurrency(int index) {
        return foreignCurrency_converter_.convert(foreignCurrency_.get(index));
      }
      /**
       * <code>repeated .Currency foreignCurrency = 2;</code>
       */
      public Builder setForeignCurrency(
          int index, Currency value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureForeignCurrencyIsMutable();
        foreignCurrency_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .Currency foreignCurrency = 2;</code>
       */
      public Builder addForeignCurrency(Currency value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureForeignCurrencyIsMutable();
        foreignCurrency_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .Currency foreignCurrency = 2;</code>
       */
      public Builder addAllForeignCurrency(
          Iterable<? extends Currency> values) {
        ensureForeignCurrencyIsMutable();
        for (Currency value : values) {
          foreignCurrency_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <code>repeated .Currency foreignCurrency = 2;</code>
       */
      public Builder clearForeignCurrency() {
        foreignCurrency_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .Currency foreignCurrency = 2;</code>
       */
      public java.util.List<Integer>
      getForeignCurrencyValueList() {
        return java.util.Collections.unmodifiableList(foreignCurrency_);
      }
      /**
       * <code>repeated .Currency foreignCurrency = 2;</code>
       */
      public int getForeignCurrencyValue(int index) {
        return foreignCurrency_.get(index);
      }
      /**
       * <code>repeated .Currency foreignCurrency = 2;</code>
       */
      public Builder setForeignCurrencyValue(
          int index, int value) {
        ensureForeignCurrencyIsMutable();
        foreignCurrency_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .Currency foreignCurrency = 2;</code>
       */
      public Builder addForeignCurrencyValue(int value) {
        ensureForeignCurrencyIsMutable();
        foreignCurrency_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .Currency foreignCurrency = 2;</code>
       */
      public Builder addAllForeignCurrencyValue(
          Iterable<Integer> values) {
        ensureForeignCurrencyIsMutable();
        for (int value : values) {
          foreignCurrency_.add(value);
        }
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ExchangeRateServiceRequest)
    }

    // @@protoc_insertion_point(class_scope:ExchangeRateServiceRequest)
    private static final ExchangeRateServiceRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ExchangeRateServiceRequest();
    }

    public static ExchangeRateServiceRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ExchangeRateServiceRequest>
        PARSER = new com.google.protobuf.AbstractParser<ExchangeRateServiceRequest>() {
      @Override
      public ExchangeRateServiceRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ExchangeRateServiceRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ExchangeRateServiceRequest> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ExchangeRateServiceRequest> getParserForType() {
      return PARSER;
    }

    @Override
    public ExchangeRateServiceRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CurrencyValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CurrencyValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.Currency currency = 1;</code>
     */
    int getCurrencyValue();
    /**
     * <code>.Currency currency = 1;</code>
     */
    Currency getCurrency();

    /**
     * <code>float value = 2;</code>
     */
    float getValue();
  }
  /**
   * Protobuf type {@code CurrencyValue}
   */
  public  static final class CurrencyValue extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CurrencyValue)
      CurrencyValueOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CurrencyValue.newBuilder() to construct.
    private CurrencyValue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CurrencyValue() {
      currency_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CurrencyValue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              currency_ = rawValue;
              break;
            }
            case 21: {

              value_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CurrencyRates.internal_static_CurrencyValue_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CurrencyRates.internal_static_CurrencyValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CurrencyValue.class, Builder.class);
    }

    public static final int CURRENCY_FIELD_NUMBER = 1;
    private int currency_;
    /**
     * <code>.Currency currency = 1;</code>
     */
    public int getCurrencyValue() {
      return currency_;
    }
    /**
     * <code>.Currency currency = 1;</code>
     */
    public Currency getCurrency() {
      @SuppressWarnings("deprecation")
      Currency result = Currency.valueOf(currency_);
      return result == null ? Currency.UNRECOGNIZED : result;
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private float value_;
    /**
     * <code>float value = 2;</code>
     */
    public float getValue() {
      return value_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (currency_ != Currency.UNKNOWN.getNumber()) {
        output.writeEnum(1, currency_);
      }
      if (value_ != 0F) {
        output.writeFloat(2, value_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (currency_ != Currency.UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, currency_);
      }
      if (value_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CurrencyValue)) {
        return super.equals(obj);
      }
      CurrencyValue other = (CurrencyValue) obj;

      if (currency_ != other.currency_) return false;
      if (Float.floatToIntBits(getValue())
          != Float.floatToIntBits(
              other.getValue())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CURRENCY_FIELD_NUMBER;
      hash = (53 * hash) + currency_;
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getValue());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CurrencyValue parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CurrencyValue parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CurrencyValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CurrencyValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CurrencyValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CurrencyValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CurrencyValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CurrencyValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static CurrencyValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static CurrencyValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CurrencyValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CurrencyValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CurrencyValue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CurrencyValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CurrencyValue)
        CurrencyValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CurrencyRates.internal_static_CurrencyValue_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CurrencyRates.internal_static_CurrencyValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CurrencyValue.class, Builder.class);
      }

      // Construct using currency_server.CurrencyRates.CurrencyValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        currency_ = 0;

        value_ = 0F;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CurrencyRates.internal_static_CurrencyValue_descriptor;
      }

      @Override
      public CurrencyValue getDefaultInstanceForType() {
        return CurrencyValue.getDefaultInstance();
      }

      @Override
      public CurrencyValue build() {
        CurrencyValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public CurrencyValue buildPartial() {
        CurrencyValue result = new CurrencyValue(this);
        result.currency_ = currency_;
        result.value_ = value_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CurrencyValue) {
          return mergeFrom((CurrencyValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CurrencyValue other) {
        if (other == CurrencyValue.getDefaultInstance()) return this;
        if (other.currency_ != 0) {
          setCurrencyValue(other.getCurrencyValue());
        }
        if (other.getValue() != 0F) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        CurrencyValue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (CurrencyValue) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int currency_ = 0;
      /**
       * <code>.Currency currency = 1;</code>
       */
      public int getCurrencyValue() {
        return currency_;
      }
      /**
       * <code>.Currency currency = 1;</code>
       */
      public Builder setCurrencyValue(int value) {
        currency_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.Currency currency = 1;</code>
       */
      public Currency getCurrency() {
        @SuppressWarnings("deprecation")
        Currency result = Currency.valueOf(currency_);
        return result == null ? Currency.UNRECOGNIZED : result;
      }
      /**
       * <code>.Currency currency = 1;</code>
       */
      public Builder setCurrency(Currency value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        currency_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.Currency currency = 1;</code>
       */
      public Builder clearCurrency() {
        
        currency_ = 0;
        onChanged();
        return this;
      }

      private float value_ ;
      /**
       * <code>float value = 2;</code>
       */
      public float getValue() {
        return value_;
      }
      /**
       * <code>float value = 2;</code>
       */
      public Builder setValue(float value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float value = 2;</code>
       */
      public Builder clearValue() {
        
        value_ = 0F;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CurrencyValue)
    }

    // @@protoc_insertion_point(class_scope:CurrencyValue)
    private static final CurrencyValue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CurrencyValue();
    }

    public static CurrencyValue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CurrencyValue>
        PARSER = new com.google.protobuf.AbstractParser<CurrencyValue>() {
      @Override
      public CurrencyValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CurrencyValue(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CurrencyValue> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<CurrencyValue> getParserForType() {
      return PARSER;
    }

    @Override
    public CurrencyValue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RateUpdateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RateUpdate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CurrencyValue exchangeRate = 1;</code>
     */
    java.util.List<CurrencyValue>
        getExchangeRateList();
    /**
     * <code>repeated .CurrencyValue exchangeRate = 1;</code>
     */
    CurrencyValue getExchangeRate(int index);
    /**
     * <code>repeated .CurrencyValue exchangeRate = 1;</code>
     */
    int getExchangeRateCount();
    /**
     * <code>repeated .CurrencyValue exchangeRate = 1;</code>
     */
    java.util.List<? extends CurrencyValueOrBuilder>
        getExchangeRateOrBuilderList();
    /**
     * <code>repeated .CurrencyValue exchangeRate = 1;</code>
     */
    CurrencyValueOrBuilder getExchangeRateOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code RateUpdate}
   */
  public  static final class RateUpdate extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RateUpdate)
      RateUpdateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RateUpdate.newBuilder() to construct.
    private RateUpdate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RateUpdate() {
      exchangeRate_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RateUpdate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                exchangeRate_ = new java.util.ArrayList<CurrencyValue>();
                mutable_bitField0_ |= 0x00000001;
              }
              exchangeRate_.add(
                  input.readMessage(CurrencyValue.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          exchangeRate_ = java.util.Collections.unmodifiableList(exchangeRate_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CurrencyRates.internal_static_RateUpdate_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CurrencyRates.internal_static_RateUpdate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RateUpdate.class, Builder.class);
    }

    public static final int EXCHANGERATE_FIELD_NUMBER = 1;
    private java.util.List<CurrencyValue> exchangeRate_;
    /**
     * <code>repeated .CurrencyValue exchangeRate = 1;</code>
     */
    public java.util.List<CurrencyValue> getExchangeRateList() {
      return exchangeRate_;
    }
    /**
     * <code>repeated .CurrencyValue exchangeRate = 1;</code>
     */
    public java.util.List<? extends CurrencyValueOrBuilder>
        getExchangeRateOrBuilderList() {
      return exchangeRate_;
    }
    /**
     * <code>repeated .CurrencyValue exchangeRate = 1;</code>
     */
    public int getExchangeRateCount() {
      return exchangeRate_.size();
    }
    /**
     * <code>repeated .CurrencyValue exchangeRate = 1;</code>
     */
    public CurrencyValue getExchangeRate(int index) {
      return exchangeRate_.get(index);
    }
    /**
     * <code>repeated .CurrencyValue exchangeRate = 1;</code>
     */
    public CurrencyValueOrBuilder getExchangeRateOrBuilder(
        int index) {
      return exchangeRate_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < exchangeRate_.size(); i++) {
        output.writeMessage(1, exchangeRate_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < exchangeRate_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, exchangeRate_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RateUpdate)) {
        return super.equals(obj);
      }
      RateUpdate other = (RateUpdate) obj;

      if (!getExchangeRateList()
          .equals(other.getExchangeRateList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getExchangeRateCount() > 0) {
        hash = (37 * hash) + EXCHANGERATE_FIELD_NUMBER;
        hash = (53 * hash) + getExchangeRateList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RateUpdate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RateUpdate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RateUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RateUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RateUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RateUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RateUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RateUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RateUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RateUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RateUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RateUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RateUpdate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RateUpdate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RateUpdate)
        RateUpdateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CurrencyRates.internal_static_RateUpdate_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CurrencyRates.internal_static_RateUpdate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RateUpdate.class, Builder.class);
      }

      // Construct using currency_server.CurrencyRates.RateUpdate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getExchangeRateFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (exchangeRateBuilder_ == null) {
          exchangeRate_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          exchangeRateBuilder_.clear();
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CurrencyRates.internal_static_RateUpdate_descriptor;
      }

      @Override
      public RateUpdate getDefaultInstanceForType() {
        return RateUpdate.getDefaultInstance();
      }

      @Override
      public RateUpdate build() {
        RateUpdate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public RateUpdate buildPartial() {
        RateUpdate result = new RateUpdate(this);
        int from_bitField0_ = bitField0_;
        if (exchangeRateBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            exchangeRate_ = java.util.Collections.unmodifiableList(exchangeRate_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.exchangeRate_ = exchangeRate_;
        } else {
          result.exchangeRate_ = exchangeRateBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RateUpdate) {
          return mergeFrom((RateUpdate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RateUpdate other) {
        if (other == RateUpdate.getDefaultInstance()) return this;
        if (exchangeRateBuilder_ == null) {
          if (!other.exchangeRate_.isEmpty()) {
            if (exchangeRate_.isEmpty()) {
              exchangeRate_ = other.exchangeRate_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureExchangeRateIsMutable();
              exchangeRate_.addAll(other.exchangeRate_);
            }
            onChanged();
          }
        } else {
          if (!other.exchangeRate_.isEmpty()) {
            if (exchangeRateBuilder_.isEmpty()) {
              exchangeRateBuilder_.dispose();
              exchangeRateBuilder_ = null;
              exchangeRate_ = other.exchangeRate_;
              bitField0_ = (bitField0_ & ~0x00000001);
              exchangeRateBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getExchangeRateFieldBuilder() : null;
            } else {
              exchangeRateBuilder_.addAllMessages(other.exchangeRate_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RateUpdate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RateUpdate) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<CurrencyValue> exchangeRate_ =
        java.util.Collections.emptyList();
      private void ensureExchangeRateIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          exchangeRate_ = new java.util.ArrayList<CurrencyValue>(exchangeRate_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          CurrencyValue, CurrencyValue.Builder, CurrencyValueOrBuilder> exchangeRateBuilder_;

      /**
       * <code>repeated .CurrencyValue exchangeRate = 1;</code>
       */
      public java.util.List<CurrencyValue> getExchangeRateList() {
        if (exchangeRateBuilder_ == null) {
          return java.util.Collections.unmodifiableList(exchangeRate_);
        } else {
          return exchangeRateBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CurrencyValue exchangeRate = 1;</code>
       */
      public int getExchangeRateCount() {
        if (exchangeRateBuilder_ == null) {
          return exchangeRate_.size();
        } else {
          return exchangeRateBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CurrencyValue exchangeRate = 1;</code>
       */
      public CurrencyValue getExchangeRate(int index) {
        if (exchangeRateBuilder_ == null) {
          return exchangeRate_.get(index);
        } else {
          return exchangeRateBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CurrencyValue exchangeRate = 1;</code>
       */
      public Builder setExchangeRate(
          int index, CurrencyValue value) {
        if (exchangeRateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExchangeRateIsMutable();
          exchangeRate_.set(index, value);
          onChanged();
        } else {
          exchangeRateBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CurrencyValue exchangeRate = 1;</code>
       */
      public Builder setExchangeRate(
          int index, CurrencyValue.Builder builderForValue) {
        if (exchangeRateBuilder_ == null) {
          ensureExchangeRateIsMutable();
          exchangeRate_.set(index, builderForValue.build());
          onChanged();
        } else {
          exchangeRateBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CurrencyValue exchangeRate = 1;</code>
       */
      public Builder addExchangeRate(CurrencyValue value) {
        if (exchangeRateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExchangeRateIsMutable();
          exchangeRate_.add(value);
          onChanged();
        } else {
          exchangeRateBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CurrencyValue exchangeRate = 1;</code>
       */
      public Builder addExchangeRate(
          int index, CurrencyValue value) {
        if (exchangeRateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExchangeRateIsMutable();
          exchangeRate_.add(index, value);
          onChanged();
        } else {
          exchangeRateBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CurrencyValue exchangeRate = 1;</code>
       */
      public Builder addExchangeRate(
          CurrencyValue.Builder builderForValue) {
        if (exchangeRateBuilder_ == null) {
          ensureExchangeRateIsMutable();
          exchangeRate_.add(builderForValue.build());
          onChanged();
        } else {
          exchangeRateBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CurrencyValue exchangeRate = 1;</code>
       */
      public Builder addExchangeRate(
          int index, CurrencyValue.Builder builderForValue) {
        if (exchangeRateBuilder_ == null) {
          ensureExchangeRateIsMutable();
          exchangeRate_.add(index, builderForValue.build());
          onChanged();
        } else {
          exchangeRateBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CurrencyValue exchangeRate = 1;</code>
       */
      public Builder addAllExchangeRate(
          Iterable<? extends CurrencyValue> values) {
        if (exchangeRateBuilder_ == null) {
          ensureExchangeRateIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, exchangeRate_);
          onChanged();
        } else {
          exchangeRateBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CurrencyValue exchangeRate = 1;</code>
       */
      public Builder clearExchangeRate() {
        if (exchangeRateBuilder_ == null) {
          exchangeRate_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          exchangeRateBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CurrencyValue exchangeRate = 1;</code>
       */
      public Builder removeExchangeRate(int index) {
        if (exchangeRateBuilder_ == null) {
          ensureExchangeRateIsMutable();
          exchangeRate_.remove(index);
          onChanged();
        } else {
          exchangeRateBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CurrencyValue exchangeRate = 1;</code>
       */
      public CurrencyValue.Builder getExchangeRateBuilder(
          int index) {
        return getExchangeRateFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CurrencyValue exchangeRate = 1;</code>
       */
      public CurrencyValueOrBuilder getExchangeRateOrBuilder(
          int index) {
        if (exchangeRateBuilder_ == null) {
          return exchangeRate_.get(index);  } else {
          return exchangeRateBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CurrencyValue exchangeRate = 1;</code>
       */
      public java.util.List<? extends CurrencyValueOrBuilder>
           getExchangeRateOrBuilderList() {
        if (exchangeRateBuilder_ != null) {
          return exchangeRateBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(exchangeRate_);
        }
      }
      /**
       * <code>repeated .CurrencyValue exchangeRate = 1;</code>
       */
      public CurrencyValue.Builder addExchangeRateBuilder() {
        return getExchangeRateFieldBuilder().addBuilder(
            CurrencyValue.getDefaultInstance());
      }
      /**
       * <code>repeated .CurrencyValue exchangeRate = 1;</code>
       */
      public CurrencyValue.Builder addExchangeRateBuilder(
          int index) {
        return getExchangeRateFieldBuilder().addBuilder(
            index, CurrencyValue.getDefaultInstance());
      }
      /**
       * <code>repeated .CurrencyValue exchangeRate = 1;</code>
       */
      public java.util.List<CurrencyValue.Builder>
           getExchangeRateBuilderList() {
        return getExchangeRateFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          CurrencyValue, CurrencyValue.Builder, CurrencyValueOrBuilder>
          getExchangeRateFieldBuilder() {
        if (exchangeRateBuilder_ == null) {
          exchangeRateBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              CurrencyValue, CurrencyValue.Builder, CurrencyValueOrBuilder>(
                  exchangeRate_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          exchangeRate_ = null;
        }
        return exchangeRateBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RateUpdate)
    }

    // @@protoc_insertion_point(class_scope:RateUpdate)
    private static final RateUpdate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RateUpdate();
    }

    public static RateUpdate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RateUpdate>
        PARSER = new com.google.protobuf.AbstractParser<RateUpdate>() {
      @Override
      public RateUpdate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RateUpdate(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RateUpdate> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RateUpdate> getParserForType() {
      return PARSER;
    }

    @Override
    public RateUpdate getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ExchangeRateServiceRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ExchangeRateServiceRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CurrencyValue_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CurrencyValue_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RateUpdate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RateUpdate_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\024currency_rates.proto\"a\n\032ExchangeRateSe" +
      "rviceRequest\022\037\n\014baseCurrency\030\001 \001(\0162\t.Cur" +
      "rency\022\"\n\017foreignCurrency\030\002 \003(\0162\t.Currenc" +
      "y\";\n\rCurrencyValue\022\033\n\010currency\030\001 \001(\0162\t.C" +
      "urrency\022\r\n\005value\030\002 \001(\002\"2\n\nRateUpdate\022$\n\014" +
      "exchangeRate\030\001 \003(\0132\016.CurrencyValue*D\n\010Cu" +
      "rrency\022\013\n\007UNKNOWN\020\000\022\007\n\003PLN\020\001\022\007\n\003EUR\020\002\022\007\n" +
      "\003CHF\020\003\022\007\n\003CAD\020\004\022\007\n\003USD\020\0052a\n\023ExchangeRate" +
      "Service\022J\n\032requestExchangeRateService\022\033." +
      "ExchangeRateServiceRequest\032\013.RateUpdate\"" +
      "\0000\001B\021\n\017currency_serverb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_ExchangeRateServiceRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ExchangeRateServiceRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ExchangeRateServiceRequest_descriptor,
        new String[] { "BaseCurrency", "ForeignCurrency", });
    internal_static_CurrencyValue_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CurrencyValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CurrencyValue_descriptor,
        new String[] { "Currency", "Value", });
    internal_static_RateUpdate_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_RateUpdate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RateUpdate_descriptor,
        new String[] { "ExchangeRate", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
